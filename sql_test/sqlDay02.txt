sqlDay02

create table product(
num int not null auto_increment,
type_a varchar(20),
type_b varchar(20),
name varchar(20) not null,
price int,
amount int,
sale_amount int ,
register_date date,
primary key(num));
Query OK, 0 rows affected (0.03 sec)

mysql> desc product;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| num           | int         | NO   | PRI | NULL    | auto_increment |
| type_a        | varchar(20) | YES  |     | NULL    |                |
| type_b        | varchar(20) | YES  |     | NULL    |                |
| name          | varchar(20) | NO   |     | NULL    |                |
| price         | int         | YES  |     | NULL    |                |
| amount        | int         | YES  |     | NULL    |                |
| sale_amount   | int         | YES  |     | NULL    |                |
| register_date | date        | YES  |     | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.00 sec)


insert into product(type_a, type_b, name, price, amount, sale_amount, register_date) values

('티셔츠','반소매','순면라운드 반팔티', 15900, 10, 153, '2021-09-15'),

('티셔츠','민소매','에어나시',9000, 33, 33, '2020-11-10'),

('패션운동복','트레이닝상의','피트니스상의', 30000, 34, 55, '2021-11-05'),

('패션운동복','트레이닝하의','피트니스하의', 50000, 55, 34, '2021-11-06'),

('아우터','재킷','양면 롱 후리스 자켓', 23300, 100, 42, '2020-11-05'),

('아우터','코트','양털 겨울 코트', 50000, 50, 30, '2021-10-31'),

('아우터','패딩','롱 패딩 점퍼', 47400, 10, 45, '2020-11-01');

select * from product;
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
| num | type_a          | type_b             | name                        | price | amount | sale_amount | register_date |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
|   1 | 티셔츠          | 반소매             | 순면라운드 반팔티           | 15900 |     10 |         153 | 2021-09-15    |
|   2 | 티셔츠          | 민소매             | 에어나시                    |  9000 |     33 |          33 | 2020-11-10    |
|   3 | 패션운동복      | 트레이닝상의       | 피트니스상의                | 30000 |     34 |          55 | 2021-11-05    |
|   4 | 패션운동복      | 트레이닝하의       | 피트니스하의                | 50000 |     55 |          34 | 2021-11-06    |
|   5 | 아우터          | 재킷               | 양면 롱 후리스 자켓         | 23300 |    100 |          42 | 2020-11-05    |
|   6 | 아우터          | 코트               | 양털 겨울 코트              | 50000 |     50 |          30 | 2021-10-31    |
|   7 | 아우터          | 패딩               | 롱 패딩 점퍼                | 47400 |     10 |          45 | 2020-11-01    |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
7 rows in set (0.00 sec)


/* amount 를 100 개로 변경, sale_amount 는 0 개로 세팅*/
전부 다 변경할 경우 where 조건식 불필요

 update product set amount = 100;
Query OK, 6 rows affected (0.00 sec)
Rows matched: 7  Changed: 6  Warnings: 0

mysql> select * from product;
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
| num | type_a          | type_b             | name                        | price | amount | sale_amount | register_date |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
|   1 | 티셔츠          | 반소매             | 순면라운드 반팔티           | 15900 |    100 |         153 | 2021-09-15    |
|   2 | 티셔츠          | 민소매             | 에어나시                    |  9000 |    100 |          33 | 2020-11-10    |
|   3 | 패션운동복      | 트레이닝상의       | 피트니스상의                | 30000 |    100 |          55 | 2021-11-05    |
|   4 | 패션운동복      | 트레이닝하의       | 피트니스하의                | 50000 |    100 |          34 | 2021-11-06    |
|   5 | 아우터          | 재킷               | 양면 롱 후리스 자켓         | 23300 |    100 |          42 | 2020-11-05    |
|   6 | 아우터          | 코트               | 양털 겨울 코트              | 50000 |    100 |          30 | 2021-10-31    |
|   7 | 아우터          | 패딩               | 롱 패딩 점퍼                | 47400 |    100 |          45 | 2020-11-01    |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
7 rows in set (0.00 sec)

mysql> update product set sale_amount = 0;
Query OK, 7 rows affected (0.00 sec)
Rows matched: 7  Changed: 7  Warnings: 0

mysql> select * from product;
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
| num | type_a          | type_b             | name                        | price | amount | sale_amount | register_date |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
|   1 | 티셔츠          | 반소매             | 순면라운드 반팔티           | 15900 |    100 |           0 | 2021-09-15    |
|   2 | 티셔츠          | 민소매             | 에어나시                    |  9000 |    100 |           0 | 2020-11-10    |
|   3 | 패션운동복      | 트레이닝상의       | 피트니스상의                | 30000 |    100 |           0 | 2021-11-05    |
|   4 | 패션운동복      | 트레이닝하의       | 피트니스하의                | 50000 |    100 |           0 | 2021-11-06    |
|   5 | 아우터          | 재킷               | 양면 롱 후리스 자켓         | 23300 |    100 |           0 | 2020-11-05    |
|   6 | 아우터          | 코트               | 양털 겨울 코트              | 50000 |    100 |           0 | 2021-10-31    |
|   7 | 아우터          | 패딩               | 롱 패딩 점퍼                | 47400 |    100 |           0 | 2020-11-01    |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
7 rows in set (0.00 sec)


/* 날짜를 기준으로 '최신순'으로 정렬 */
/* order by 를 이용 정렬 asc :오름차순.생락가능 desc 내림차순*/
/* 정렬은 항상 라인 마지막에 추가 */

 select * from product order by register_date desc;
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
| num | type_a          | type_b             | name                        | price | amount | sale_amount | register_date |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
|   4 | 패션운동복      | 트레이닝하의       | 피트니스하의                | 50000 |    100 |           0 | 2021-11-06    |
|   3 | 패션운동복      | 트레이닝상의       | 피트니스상의                | 30000 |    100 |           0 | 2021-11-05    |
|   6 | 아우터          | 코트               | 양털 겨울 코트              | 50000 |    100 |           0 | 2021-10-31    |
|   1 | 티셔츠          | 반소매             | 순면라운드 반팔티           | 15900 |    100 |           0 | 2021-09-15    |
|   2 | 티셔츠          | 민소매             | 에어나시                    |  9000 |    100 |           0 | 2020-11-10    |
|   5 | 아우터          | 재킷               | 양면 롱 후리스 자켓         | 23300 |    100 |           0 | 2020-11-05    |
|   7 | 아우터          | 패딩               | 롱 패딩 점퍼                | 47400 |    100 |           0 | 2020-11-01    |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
7 rows in set (0.00 sec)


/* 티셔츠의 개수와 평균 가격을 출력 */

 select type_a, count(type_a), avg(price) from product where type_a ='티셔츠';
+-----------+---------------+------------+
| type_a    | count(type_a) | avg(price) |
+-----------+---------------+------------+
| 티셔츠    |             2 | 12450.0000 |
+-----------+---------------+------------+
1 row in set (0.00 sec)

 select type_a, count(type_a), round(avg(price),0) from product where type_a ='티셔츠';
+-----------+---------------+---------------------+
| type_a    | count(type_a) | round(avg(price),0) |
+-----------+---------------+---------------------+
| 티셔츠    |             2 |               12450 |
+-----------+---------------+---------------------+
1 row in set (0.00 sec)


select type_a, count(type_a) from product
    -> group by type_a;
+-----------------+---------------+
| type_a          | count(type_a) |
+-----------------+---------------+
| 티셔츠          |             2 |
| 패션운동복      |             2 |
| 아우터          |             3 |
+-----------------+---------------+
3 rows in set (0.00 sec)

select type_a, count(type_a) from product
    -> group by type_a having type_a='티셔츠';
+-----------+---------------+
| type_a    | count(type_a) |
+-----------+---------------+
| 티셔츠    |             2 |
+-----------+---------------+
1 row in set (0.00 sec)


/* 각 타입별로 재고 합계, 가격 평균 소수점 1자리만 출력 */

 select type_a, sum(amount), round(avg(price),1) from product
    -> group by type_a;
+-----------------+-------------+---------------------+
| type_a          | sum(amount) | round(avg(price),1) |
+-----------------+-------------+---------------------+
| 티셔츠          |         200 |             12450.0 |
| 패션운동복      |         200 |             40000.0 |
| 아우터          |         300 |             40233.3 |
+-----------------+-------------+---------------------+
3 rows in set (0.00 sec)


sql 내장함수

-산술연산함수 
기본 산술연산 + - * / mod(나머지) 
mod(값1,값2) : 값1을 값2로 나눈 나머지
round(값,소수자리수) : 반올림 - 소수위쪽으로 반올림
format(값,소수자리수) : 천단위 구분기호 사용가능
ceilling(값,자리수) : 올림
floor(값,자리수) : 버림
sqrt(값) / power(값,제곱) : 루트 / 제곱 
rand() : 0~1사이의 난수 발생
abs(숫자) : 절대값

/* 내장함수 */
select mod (10,3);
+------------+
| mod (10,3) |
+------------+
|          1 |
+------------+
1 row in set (0.00 sec)

select round(123.4567,2);
+-------------------+
| round(123.4567,2) |
+-------------------+
|            123.46 |
+-------------------+
1 row in set (0.00 sec)

select round(123.4567,-2);
+--------------------+
| round(123.4567,-2) |
+--------------------+
|                100 |
+--------------------+
1 row in set (0.00 sec)

mysql> select round(123.4567,-1);
+--------------------+
| round(123.4567,-1) |
+--------------------+
|                120 |
+--------------------+
1 row in set (0.00 sec)

select round(1234567,-3);
+-------------------+
| round(1234567,-3) |
+-------------------+
|           1235000 |
+-------------------+
1 row in set (0.00 sec)


난수값 발생 
select rand();

+--------------------+
| rand()             |
+--------------------+
| 0.6595707336995478 |
+--------------------+
1 row in set (0.00 sec)


1~10사이의 난수값 발생

 select floor(1+rand()*10);
+--------------------+
| floor(1+rand()*10) |
+--------------------+
|                 10 |
+--------------------+
1 row in set (0.00 sec)


- 문자열 함수 
concat(문자,문자) : 문자열 연결
length(숫자) : 숫자의 길이
length(문자) : 문자의 길이 (한글은 1글자 =3 , 영어 =1)

 select concat('abc','def');
+---------------------+
| concat('abc','def') |
+---------------------+
| abcdef              |
+---------------------+
1 row in set (0.00 sec)

mysql> select length('abcdef');
+------------------+
| length('abcdef') |
+------------------+
|                6 |
+------------------+
1 row in set (0.00 sec)

mysql> select length(132456789);
+-------------------+
| length(132456789) |
+-------------------+
|                 9 |
+-------------------+
1 row in set (0.00 sec)

mysql> select length('가나다');
+---------------------+
| length('가나다')    |
+---------------------+
|                   9 |
+---------------------+
1 row in set (0.00 sec)

 select char_length('가나다');
+--------------------------+
| char_length('가나다')    |
+--------------------------+
|                        3 |
+--------------------------+
1 row in set (0.00 sec)

select replace('abcd','a','f');
+-------------------------+
| replace('abcd','a','f') |
+-------------------------+
| fbcd                    |
+-------------------------+
1 row in set (0.00 sec)

 select replace('Hello SQL','Hello','hi');
+-----------------------------------+
| replace('Hello SQL','Hello','hi') |
+-----------------------------------+
| hi SQL                            |
+-----------------------------------+
1 row in set (0.00 sec)


 select concat_ws('/','2022','10','13');
+---------------------------------+
| concat_ws('/','2022','10','13') |
+---------------------------------+
| 2022/10/13                      |
+---------------------------------+
1 row in set (0.00 sec)

 select substring('abcedfg',1,2);
+--------------------------+
| substring('abcedfg',1,2) |
+--------------------------+
| ab                       |
+--------------------------+
1 row in set (0.00 sec)

 select substring('abcedfg',2,4);	//substr로 써도 됨
+--------------------------+
| substring('abcedfg',2,4) |
+--------------------------+
| bced                     |
+--------------------------+
1 row in set (0.00 sec)

select left('hello world' ,5);
+------------------------+
| left('hello world' ,5) |
+------------------------+
| hello                  |
+------------------------+
1 row in set (0.00 sec)

mysql> select right('hello world' ,5);
+-------------------------+
| right('hello world' ,5) |
+-------------------------+
| world                   |
+-------------------------+
1 row in set (0.00 sec)

select ucase('hello WORLD');
+----------------------+
| ucase('hello WORLD') |
+----------------------+
| HELLO WORLD          |
+----------------------+
1 row in set (0.00 sec)

 select lcase('hello WORLD');
+----------------------+
| lcase('hello WORLD') |
+----------------------+
| hello world          |
+----------------------+
1 row in set (0.00 sec)

 select adddate('2022-10-13', interval 5 day); 날짜 더하기
 select subdate('2022-10-13', interval 5 day);  날짜 빼기


select addtime('2022-10-13 11:15:00', '1:00:00');
 select subtime('2022-10-13 11:15:00', '1:00:00');

select date('2020-11-10');
+--------------------+
| date('2020-11-10') |
+--------------------+
| 2020-11-10         |
+--------------------+
1 row in set (0.00 sec)

select now();		//오늘 날짜 현재시각
+---------------------+
| now()               |
+---------------------+
| 2022-10-13 11:19:27 |
+---------------------+
1 row in set (0.00 sec)

 select date(now());		//날짜만 분리
+-------------+
| date(now()) |
+-------------+
| 2022-10-13  |
+-------------+
1 row in set (0.00 sec)

mysql> select time(now());	//시간만 분리
+-------------+
| time(now()) |
+-------------+
| 11:49:05    |
+-------------+
1 row in set (0.00 sec)


 select datediff('2010-10-12',now());
+------------------------------+
| datediff('2010-10-12',now()) |
+------------------------------+
|                        -4384 |
+------------------------------+
1 row in set (0.00 sec)

 select timediff('2022-10.13 00:01:01','2022-10-12 00:01:01');
+-------------------------------------------------------+
| timediff('2022-10.13 00:01:01','2022-10-12 00:01:01') |
+-------------------------------------------------------+
| 24:00:00                                              |
+-------------------------------------------------------+
1 row in set, 1 warning (0.00 sec)


select dayofweek('2022-10-13');
+-------------------------+
| dayofweek('2022-10-13') |
+-------------------------+
|                       5 |
+-------------------------+
1 row in set (0.00 sec)

mysql> select dayofyear('2022-10-13');
+-------------------------+
| dayofyear('2022-10-13') |
+-------------------------+
|                     286 |
+-------------------------+
1 row in set (0.00 sec)

mysql> select monthname('2022-10-13');
+-------------------------+
| monthname('2022-10-13') |
+-------------------------+
| October                 |
+-------------------------+
1 row in set (0.00 sec)



문자열함수

if(조건식,참,거짓);
if(조건식,참,if(조건식,참,if(조건식,참,거짓)));

case 
when 조건1 then 값1
when 조건1 then 값1
when 조건1 then 값1
when 조건1 then 값1
end;
select if(mod(10,2)=0, '짝수','홀수');
+------------------------------------+
| if(mod(10,2)=0, '짝수','홀수')     |
+------------------------------------+
| 짝수                               |
+------------------------------------+
1 row in set (0.00 sec)

mysql> select case when 89 >= 90 then 'a'
    -> when 89 >=80 then 'b'
    -> when 89 >=70 then 'c'
    -> end;
+-----------------------------------------------------------------------------+
| case when 89 >= 90 then 'a'
when 89 >=80 then 'b'
when 89 >=70 then 'c'
end |
+-----------------------------------------------------------------------------+
| b                                                                           |
+-----------------------------------------------------------------------------+
1 row in set (0.00 sec)

<sql 시작하기>>>>>>>>>

 use example;
Database changed
mysql> desc product;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| num           | int         | NO   | PRI | NULL    | auto_increment |
| type_a        | varchar(20) | YES  |     | NULL    |                |
| type_b        | varchar(20) | YES  |     | NULL    |                |
| name          | varchar(20) | NO   |     | NULL    |                |
| price         | int         | YES  |     | NULL    |                |
| amount        | int         | YES  |     | NULL    |                |
| sale_amount   | int         | YES  |     | NULL    |                |
| register_date | date        | YES  |     | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
8 rows in set (0.05 sec)

mysql> select * from product;
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
| num | type_a          | type_b             | name                        | price | amount | sale_amount | register_date |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
|   1 | 티셔츠          | 반소매             | 순면라운드 반팔티           | 15900 |    100 |           0 | 2021-09-15    |
|   2 | 티셔츠          | 민소매             | 에어나시                    |  9000 |    100 |           0 | 2020-11-10    |
|   3 | 패션운동복      | 트레이닝상의       | 피트니스상의                | 30000 |    100 |           0 | 2021-11-05    |
|   4 | 패션운동복      | 트레이닝하의       | 피트니스하의                | 50000 |    100 |           0 | 2021-11-06    |
|   5 | 아우터          | 재킷               | 양면 롱 후리스 자켓         | 23300 |    100 |           0 | 2020-11-05    |
|   6 | 아우터          | 코트               | 양털 겨울 코트              | 50000 |    100 |           0 | 2021-10-31    |
|   7 | 아우터          | 패딩               | 롱 패딩 점퍼                | 47400 |    100 |           0 | 2020-11-01    |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
7 rows in set (0.00 sec)


/* 가격이 20,000 이상이면 할인상품 
   표시되어야 하는 필드 name 할인여부만 표시 */

select name, if(price >=20000,'할인상품','') from product;
+-----------------------------+-------------------------------------+
| name                        | if(price >=20000,'할인상품','')     |
+-----------------------------+-------------------------------------+
| 순면라운드 반팔티           |                                     |
| 에어나시                    |                                     |
| 피트니스상의                | 할인상품                            |
| 피트니스하의                | 할인상품                            |
| 양면 롱 후리스 자켓         | 할인상품                            |
| 양털 겨울 코트              | 할인상품                            |
| 롱 패딩 점퍼                | 할인상품                            |
+-----------------------------+-------------------------------------+
7 rows in set (0.00 sec)

mysql> select name, if(price >=20000,'할인상품','NO 할인') from product;
+-----------------------------+----------------------------------------------+
| name                        | if(price >=20000,'할인상품','NO 할인')       |
+-----------------------------+----------------------------------------------+
| 순면라운드 반팔티           | NO 할인                                      |
| 에어나시                    | NO 할인                                      |
| 피트니스상의                | 할인상품                                     |
| 피트니스하의                | 할인상품                                     |
| 양면 롱 후리스 자켓         | 할인상품                                     |
| 양털 겨울 코트              | 할인상품                                     |
| 롱 패딩 점퍼                | 할인상품                                     |
+-----------------------------+----------------------------------------------+
7 rows in set (0.00 sec)


/* name, price, sale_price 표시 10% 세일*/

select name, price, if(price >=20000, price*0.9, '비할인가') as '10%세일', if(price >=20000,'할인상품','NO 할인') as '할인여부' from product;
+-----------------------------+-------+--------------+--------------+
| name                        | price | 10%세일      | 할인여부     |
+-----------------------------+-------+--------------+--------------+
| 순면라운드 반팔티           | 15900 | 비할인가     | NO 할인      |
| 에어나시                    |  9000 | 비할인가     | NO 할인      |
| 피트니스상의                | 30000 | 27000.0      | 할인상품     |
| 피트니스하의                | 50000 | 45000.0      | 할인상품     |
| 양면 롱 후리스 자켓         | 23300 | 20970.0      | 할인상품     |
| 양털 겨울 코트              | 50000 | 45000.0      | 할인상품     |
| 롱 패딩 점퍼                | 47400 | 42660.0      | 할인상품     |
+-----------------------------+-------+--------------+--------------+
7 rows in set (0.00 sec)


select name, price, if(price >=20000, round(price*0.9,0), '비할인가') as '10%세일', if(price >=20000,'할인상품','NO 할인') as '할인여부' from product;
+-----------------------------+-------+--------------+--------------+
| name                        | price | 10%세일      | 할인여부     |
+-----------------------------+-------+--------------+--------------+
| 순면라운드 반팔티           | 15900 | 비할인가     | NO 할인      |
| 에어나시                    |  9000 | 비할인가     | NO 할인      |
| 피트니스상의                | 30000 | 27000        | 할인상품     |
| 피트니스하의                | 50000 | 45000        | 할인상품     |
| 양면 롱 후리스 자켓         | 23300 | 20970        | 할인상품     |
| 양털 겨울 코트              | 50000 | 45000        | 할인상품     |
| 롱 패딩 점퍼                | 47400 | 42660        | 할인상품     |
+-----------------------------+-------+--------------+--------------+
7 rows in set (0.00 sec)

select name, price, if(price >=20000, round(price*0.9,0), concat('비할인가 : ',price)) as '10%세일', if(price >=20000,'할인상품','NO 할인') as '할인여부' from product;
+-----------------------------+-------+----------------------+--------------+
| name                        | price | 10%세일              | 할인여부     |
+-----------------------------+-------+----------------------+--------------+
| 순면라운드 반팔티           | 15900 | 비할인가 : 15900     | NO 할인      |
| 에어나시                    |  9000 | 비할인가 : 9000      | NO 할인      |
| 피트니스상의                | 30000 | 27000                | 할인상품     |
| 피트니스하의                | 50000 | 45000                | 할인상품     |
| 양면 롱 후리스 자켓         | 23300 | 20970                | 할인상품     |
| 양털 겨울 코트              | 50000 | 45000                | 할인상품     |
| 롱 패딩 점퍼                | 47400 | 42660                | 할인상품     |
+-----------------------------+-------+----------------------+--------------+
7 rows in set (0.00 sec)



 select * from student;
+-----+------+------+---------+-------+
| num | name | dep  | addr    | score |
+-----+------+------+---------+-------+
|   1 | Hong | com  | seoul   |    60 |
|   2 | Kang | Kor  | Mokop   |    85 |
|   3 | Pinu | math | Busan   |    80 |
|   4 | Cha  | Eng  | seoul   |    90 |
|   5 | Song | com  | Incheon |    70 |
|   6 | Jung | Kor  | seoul   |    90 |
|   7 | Leeg | com  | Incheon |    85 |
|   8 | Lim  | com  | incheon |    90 |
|   9 | Yuk  | com  | seoul   |    85 |
|  10 | Kim  | Eng  | incheon |    90 |
+-----+------+------+---------+-------+
10 rows in set (0.00 sec)

/* 90>=A, 80>=B 70>=C 60>=D, F */
/* 필드 생성 alter table add  필드명 grade */


 alter table student add grade char(10);	//grade 항목신설

Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

select * from student;
+-----+------+------+---------+-------+-------+
| num | name | dep  | addr    | score | grade |
+-----+------+------+---------+-------+-------+
|   1 | Hong | com  | seoul   |    60 | NULL  |
|   2 | Kang | Kor  | Mokop   |    85 | NULL  |
|   3 | Pinu | math | Busan   |    80 | NULL  |
|   4 | Cha  | Eng  | seoul   |    90 | NULL  |
|   5 | Song | com  | Incheon |    70 | NULL  |
|   6 | Jung | Kor  | seoul   |    90 | NULL  |
|   7 | Leeg | com  | Incheon |    85 | NULL  |
|   8 | Lim  | com  | incheon |    90 | NULL  |
|   9 | Yuk  | com  | seoul   |    85 | NULL  |
|  10 | Kim  | Eng  | incheon |    90 | NULL  |
+-----+------+------+---------+-------+-------+
10 rows in set (0.00 sec)

조건식 부여 

update student set grade =
case
when 90 <= score then 'A'
when 80<=score then 'B'
when 70<=score then 'C'
when 60<=score then 'D'
when 60 > score then 'F'
end;
 select * from student;
+-----+------+------+---------+-------+-------+
| num | name | dep  | addr    | score | grade |
+-----+------+------+---------+-------+-------+
|   1 | Hong | com  | seoul   |    60 | D     |
|   2 | Kang | Kor  | Mokop   |    85 | B     |
|   3 | Pinu | math | Busan   |    80 | B     |
|   4 | Cha  | Eng  | seoul   |    90 | A     |
|   5 | Song | com  | Incheon |    70 | C     |
|   6 | Jung | Kor  | seoul   |    90 | A     |
|   7 | Leeg | com  | Incheon |    85 | B     |
|   8 | Lim  | com  | incheon |    90 | A     |
|   9 | Yuk  | com  | seoul   |    85 | B     |
|  10 | Kim  | Eng  | incheon |    90 | A     |
+-----+------+------+---------+-------+-------+
10 rows in set (0.00 sec)


/* age 필드 추가, dep = eng , age=21 나머지는 age=20 */


 alter table student add age int not null;	//age필드 추가
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select * from student;
+-----+------+------+---------+-------+-------+-----+
| num | name | dep  | addr    | score | grade | age |
+-----+------+------+---------+-------+-------+-----+
|   1 | Hong | com  | seoul   |    60 | D     |   0 |
|   2 | Kang | Kor  | Mokop   |    85 | B     |   0 |
|   3 | Pinu | math | Busan   |    80 | B     |   0 |
|   4 | Cha  | Eng  | seoul   |    90 | A     |   0 |
|   5 | Song | com  | Incheon |    70 | C     |   0 |
|   6 | Jung | Kor  | seoul   |    90 | A     |   0 |
|   7 | Leeg | com  | Incheon |    85 | B     |   0 |
|   8 | Lim  | com  | incheon |    90 | A     |   0 |
|   9 | Yuk  | com  | seoul   |    85 | B     |   0 |
|  10 | Kim  | Eng  | incheon |    90 | A     |   0 |
+-----+------+------+---------+-------+-------+-----+
10 rows in set (0.00 sec)

// age 값 입력
update student set age =
case
when dep = 'Eng' then 21
when dep <> 'Eng' then 20
end;

 select * from student;
+-----+------+------+---------+-------+-------+-----+
| num | name | dep  | addr    | score | grade | age |
+-----+------+------+---------+-------+-------+-----+
|   1 | Hong | com  | seoul   |    60 | D     |  20 |
|   2 | Kang | Kor  | Mokop   |    85 | B     |  20 |
|   3 | Pinu | math | Busan   |    80 | B     |  20 |
|   4 | Cha  | Eng  | seoul   |    90 | A     |  21 |
|   5 | Song | com  | Incheon |    70 | C     |  20 |
|   6 | Jung | Kor  | seoul   |    90 | A     |  20 |
|   7 | Leeg | com  | Incheon |    85 | B     |  20 |
|   8 | Lim  | com  | incheon |    90 | A     |  20 |
|   9 | Yuk  | com  | seoul   |    85 | B     |  20 |
|  10 | Kim  | Eng  | incheon |    90 | A     |  21 |
+-----+------+------+---------+-------+-------+-----+
10 rows in set (0.00 sec)


//장학생 추출 학생명단 출력
select if(grade='A', concat(name,'(장학생)'), name) as '학생명단', score from student;

 select if(grade='A', concat(name,'(장학생)'), name) as '학생명단', score from student;
+-----------------+-------+
| 학생명단        | score |
+-----------------+-------+
| Hong            |    60 |
| Kang            |    85 |
| Pinu            |    80 |
| Cha(장학생)     |    90 |
| Song            |    70 |
| Jung(장학생)    |    90 |
| Leeg            |    85 |
| Lim(장학생)     |    90 |
| Yuk             |    85 |
| Kim(장학생)     |    90 |
+-----------------+-------+


use example;
Database changed
mysql> select * from product;
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
| num | type_a          | type_b             | name                        | price | amount | sale_amount | register_date |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
|   1 | 티셔츠          | 반소매             | 순면라운드 반팔티           | 15900 |    100 |           0 | 2021-09-15    |
|   2 | 티셔츠          | 민소매             | 에어나시                    |  9000 |    100 |           0 | 2020-11-10    |
|   3 | 패션운동복      | 트레이닝상의       | 피트니스상의                | 30000 |    100 |           0 | 2021-11-05    |
|   4 | 패션운동복      | 트레이닝하의       | 피트니스하의                | 50000 |    100 |           0 | 2021-11-06    |
|   5 | 아우터          | 재킷               | 양면 롱 후리스 자켓         | 23300 |    100 |           0 | 2020-11-05    |
|   6 | 아우터          | 코트               | 양털 겨울 코트              | 50000 |    100 |           0 | 2021-10-31    |
|   7 | 아우터          | 패딩               | 롱 패딩 점퍼                | 47400 |    100 |           0 | 2020-11-01    |
+-----+-----------------+--------------------+-----------------------------+-------+--------+-------------+---------------+
7 rows in set (0.00 sec)

/* 2021년인 데이터만 추출*/



/* 스쿨 DB 만들기*/

 create database school;
Query OK, 1 row affected (0.00 sec)

use school;
Database changed

create table student (
    -> std_num varchar(10),
    -> std_name varchar(20),
    -> std_major varchar(20),
    -> std_term int ,
    -> std_com_point int ,
    -> primary key(std_num));
Query OK, 0 rows affected (0.01 sec)

desc student;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| std_num       | varchar(10) | NO   | PRI | NULL    |       |
| std_name      | varchar(20) | YES  |     | NULL    |       |
| std_major     | varchar(20) | YES  |     | NULL    |       |
| std_term      | int         | YES  |     | NULL    |       |
| std_com_point | int         | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
5 rows in set (0.00 sec)

 create table course (
    -> co_code varchar(20),
    -> co_name varchar(20),
    -> co_professor varchar(20),
    -> co_point int ,
    -> co_time int ,
    -> co_timetable varchar(20),
    -> primary key(co_code));
Query OK, 0 rows affected (0.01 sec)

 desc course;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| co_code      | varchar(20) | NO   | PRI | NULL    |       |
| co_name      | varchar(20) | YES  |     | NULL    |       |
| co_professor | varchar(20) | YES  |     | NULL    |       |
| co_point     | int         | YES  |     | NULL    |       |
| co_time      | int         | YES  |     | NULL    |       |
| co_timetable | varchar(20) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
6 rows in set (0.00 sec)

 create table attend (
    -> at_num int  auto_increment,
    -> at_st_num varchar(10),
    -> at_co_code varchar(20),
    -> at_mid int ,
    -> at_final int ,
    -> at_attend int,
    -> at_hw int,
    -> at_repetition char(2),
    -> at_year int,
    -> at_term varchar(4),
    -> at_score varchar(4),
    -> primary key(at_num));
Query OK, 0 rows affected (0.01 sec)

 alter table attend add foreign key(at_st_num) references student(std_num);
Query OK, 0 rows affected (0.15 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> alter table attend add foreign key(at_co_code) references course(co_code);
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0

 desc attend;
+---------------+-------------+------+-----+---------+----------------+
| Field         | Type        | Null | Key | Default | Extra          |
+---------------+-------------+------+-----+---------+----------------+
| at_num        | int         | NO   | PRI | NULL    | auto_increment |
| at_st_num     | varchar(10) | YES  | MUL | NULL    |                |
| at_co_code    | varchar(20) | YES  | MUL | NULL    |                |
| at_mid        | int         | YES  |     | NULL    |                |
| at_final      | int         | YES  |     | NULL    |                |
| at_attend     | int         | YES  |     | NULL    |                |
| at_hw         | int         | YES  |     | NULL    |                |
| at_repetition | char(2)     | YES  |     | NULL    |                |
| at_year       | int         | YES  |     | NULL    |                |
| at_term       | varchar(4)  | YES  |     | NULL    |                |
| at_score      | varchar(4)  | YES  |     | NULL    |                |
+---------------+-------------+------+-----+---------+----------------+
11 rows in set (0.00 sec)


/* 값 입력*/
insert into student (std_num,std_name,std_major,std_term,std_com_point)
values('2019160123','전봉준','컴퓨터공학',2,64),
('2019456001','강길동','디자인',3,60),
('2020123001','강나래','화학공학',1,21),
('2020123020','박철수','화학공학',1,20),
('2020160001','강철수','컴퓨터공학',1,20),
('2020160002','나영희','컴퓨터공학',1,19);

insert into course(co_code,co_name,co_professor,co_point,co_time,co_timetable)
values('202021ipc001','컴퓨터개론','유관순',2,2,'화1A,1B,2A,2B'),
('202021ipc002','기초전기','이순신',3,4,'월1A,1B,2A,목1A,1B,2A'),
('202021msc001','대학수학기초','홍길동',3,3,'월1A,1B,2A,수1A,1B,2A'),
('202022msc001','대학수학기초','임꺽정',3,3,'화1A,1B,2A,목1A,1B,2A');

insert into attend(at_st_num,at_co_code,at_mid,at_final,at_attend,at_hw,at_repetition,at_year,at_term,at_score)
values('2020160001','202021msc001',0,0,0,0,'n','2020',2,''),
('2020160002','202021msc001',0,0,0,0,'n','2020',2,''),
('2020160001','202021ipc002',0,0,0,0,'n','2020',2,''),
('2020160002','202021ipc002',0,0,0,0,'n','2020',2,''),
('2020123001','202021ipc002',0,0,0,0,'n','2020',2,''),
('2020123020','202021ipc002',0,0,0,0,'n','2020',2,''),
('2019456001','202021ipc002',0,0,0,0,'n','2020',2,''),
('2019160123','202021ipc002',0,0,0,0,'n','2020',2,'');

// 여기서 다 입력하지 말고

alter 를 이용 mid final attend repetition year 일괄 입력하고 insert into ㄱㄱ


 select * from student;
+------------+-----------+-----------------+----------+---------------+
| std_num    | std_name  | std_major       | std_term | std_com_point |
+------------+-----------+-----------------+----------+---------------+
| 2019160123 | 전봉준    | 컴퓨터공학      |        2 |            64 |
| 2019456001 | 강길동    | 디자인          |        3 |            60 |
| 2020123001 | 강나래    | 화학공학        |        1 |            21 |
| 2020123020 | 박철수    | 화학공학        |        1 |            20 |
| 2020160001 | 강철수    | 컴퓨터공학      |        1 |            20 |
| 2020160002 | 나영희    | 컴퓨터공학      |        1 |            19 |
+------------+-----------+-----------------+----------+---------------+
6 rows in set (0.00 sec)

mysql> select * from course;
+--------------+--------------------+--------------+----------+---------+-------------------------+
| co_code      | co_name            | co_professor | co_point | co_time | co_timetable            |
+--------------+--------------------+--------------+----------+---------+-------------------------+
| 202021ipc001 | 컴퓨터개론         | 유관순       |        2 |       2 | 화1A,1B,2A,2B           |
| 202021ipc002 | 기초전기           | 이순신       |        3 |       4 | 월1A,1B,2A,목1A,1B,2A   |
| 202021msc001 | 대학수학기초       | 홍길동       |        3 |       3 | 월1A,1B,2A,수1A,1B,2A   |
| 202022msc001 | 대학수학기초       | 임꺽정       |        3 |       3 | 화1A,1B,2A,목1A,1B,2A   |
+--------------+--------------------+--------------+----------+---------+-------------------------+
4 rows in set (0.00 sec)

mysql> select * from attend;
+--------+------------+--------------+--------+----------+-----------+-------+---------------+---------+---------+----------+
| at_num | at_st_num  | at_co_code   | at_mid | at_final | at_attend | at_hw | at_repetition | at_year | at_term | at_score |
+--------+------------+--------------+--------+----------+-----------+-------+---------------+---------+---------+----------+
|      1 | 2020160001 | 202021msc001 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      2 | 2020160002 | 202021msc001 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      3 | 2020160001 | 202021ipc002 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      4 | 2020160002 | 202021ipc002 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      5 | 2020123001 | 202021ipc002 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      6 | 2020123020 | 202021ipc002 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      7 | 2019456001 | 202021ipc002 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
|      8 | 2019160123 | 202021ipc002 |      0 |        0 |         0 |     0 | n             |    2020 | 2       |          |
+--------+------------+--------------+--------+----------+-----------+-------+---------------+---------+---------+----------+
8 rows in set (0.00 sec)


/* 조인 join */

-- 워크벤치주석처리
-- 조인(join) 
-- 두개이상의 테이블을 연결하여 검색할 때 사용
-- select 속성1, 속성2, ... from 테이블명 a join 테이블 b
-- on 테이블명 a.외래키명 = 테이블명 b.외래키명;

select std_name, co_name from attend join student 
on at_st_num = std_num
join course
on at_co_code = co_code;

+-----------+--------------------+
| std_name  | co_name            |
+-----------+--------------------+
| 전봉준    | 기초전기           |
| 강길동    | 기초전기           |
| 강나래    | 기초전기           |
| 박철수    | 기초전기           |
| 강철수    | 대학수학기초       |
| 강철수    | 기초전기           |
| 나영희    | 대학수학기초       |
| 나영희    | 기초전기           |
+-----------+--------------------+

where co_name='기초전기';
=> 위 값에서 기초전기만 따로 색출

+-----------+--------------+
| std_name  | co_name      |
+-----------+--------------+
| 강철수    | 기초전기     |
| 나영희    | 기초전기     |
| 강나래    | 기초전기     |
| 박철수    | 기초전기     |
| 강길동    | 기초전기     |
| 전봉준    | 기초전기     |
+-----------+--------------+
6 rows in set (0.00 sec)

// 워크밴치 Database -> reverse engineer -> 다이아그램 출력

/* 기초 전기를 듣는 학생들만 검색 ( 학번 이름 전공 )*/ 
select std_num, std_name, std_major from student 
join attend on std_num = at_st_num
join course on at_co_code = co_code
where co_name ='기초전기';


/* 2020년 신입생들의 평균 이수학점 */
select round(avg(std_com_point),1) as '2020 신입생들의 평균 이수학점' from student where std_term = 1;
select round(avg(std_com_point),1) as '2020 신입생들의 평균 이수학점' from student where substring(std_num, 1,4)= '2020';
select round(avg(std_com_point),1) as '2020 신입생들의 평균 이수학점' from student where left(std_num, 4)= '2020';

 select round(avg(std_com_point),1) as '2020 신입생들의 평균 이수학점' from student where std_term = 1;
+------------------------------------------+
| 2020 신입생들의 평균 이수학점            |
+------------------------------------------+
|                                     20.0 |
+------------------------------------------+
1 row in set (0.00 sec)

mysql> select round(avg(std_com_point),1) as '2020 신입생들의 평균 이수학점' from student where substring(std_num, 1,4)= '2020';
+------------------------------------------+
| 2020 신입생들의 평균 이수학점            |
+------------------------------------------+
|                                     20.0 |
+------------------------------------------+
1 row in set (0.00 sec)

select round(avg(std_com_point),1) as '2020 신입생들의 평균 이수학점' from student where left(std_num, 4)= '2020';
+------------------------------------------+
| 2020 신입생들의 평균 이수학점            |
+------------------------------------------+
|                                     20.0 |
+------------------------------------------+
1 row in set (0.00 sec)

select std_name from student join attend on std_num = at_st_num
join course on at_co_code = co_code
where co_name ='기초전기' and co_professor='이순신' order by std_name; 

강길동
강나래
강철수
나영희
박철수
전봉준
